[gd_scene load_steps=9 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://Polygon2D.gd" type="Script" id=2]
[ext_resource path="res://grid.png" type="Texture" id=3]
[ext_resource path="res://TubeEl.gd" type="Script" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float level = 0.0;

void vertex() {
	VERTEX.x = VERTEX.x;
	
}

void fragment() {
    vec2 distor = vec2(UV.x * abs(sin(TIME)),UV.y * abs(cos(TIME)) );
	// vec2 distor = vec2(sqrt(UV.x * UV.y) * 2.0 * 	abs(sin(1)), UV.y);
	// vec2 distor = UV;
	vec4 col = texture(TEXTURE, distor);
    
	//COLOR = col;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/level = 0.0

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform vec2 p0;
uniform vec2 p1;
uniform vec2 p2;
uniform vec2 p3;

uniform sampler2D inputTexture;

varying vec2 vert;

void vertex() {
	vert = VERTEX;
}

float cross2d( in vec2 a, in vec2 b ) { return a.x*b.y - a.y*b.x; }

vec2 invBilinear( in vec2 p, in vec2 a, in vec2 b, in vec2 c, in vec2 d ) {
    vec2 e = b-a;
    vec2 f = d-a;
    vec2 g = a-b+c-d;
    vec2 h = p-a;
        
    float k2 = cross2d( g, f );
    float k1 = cross2d( e, f ) + cross2d( h, g );
    float k0 = cross2d( h, e );
    
    float w = k1*k1 - 4.0*k0*k2;
    if( w<0.0 ) return vec2(-1.0);
    w = sqrt( w );

    // will fail for k0=0, which is only on the ba edge 
    float v = 2.0*k0/(-k1 - w); 
    if( v<0.0 || v>1.0 ) v = 2.0*k0/(-k1 + w);

    float u = (h.x - f.x*v)/(e.x + g.x*v);
    if( u<0.0 || u>1.0 || v<0.0 || v>1.0 ) return vec2(-1.0);
    return vec2( u, v );
}

void fragment() {
	vec2 uv = invBilinear(vert, p0, p1, p2, p3);
	
    // vec4 col = vec4(uv.x, uv.y, 0.0, 1.0);
	// COLOR = col;
	COLOR = texture(inputTexture, vec2(uv.x, uv.y));
	
	
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/p0 = Vector2( -21.6506, -12.5 )
shader_param/p1 = Vector2( 21.6506, 12.5 )
shader_param/p2 = Vector2( 14.7721, 32.6047 )
shader_param/p3 = Vector2( -14.7721, 27.3953 )
shader_param/inputTexture = ExtResource( 3 )

[node name="Root" type="Node2D"]

[node name="Node2D" type="Node2D" parent="."]
editor/display_folded = true
visible = false

[node name="Sprite" type="Sprite" parent="Node2D"]
visible = false
material = SubResource( 2 )
position = Vector2( 296, 296 )
texture = ExtResource( 1 )

[node name="Node2D" type="Node2D" parent="Node2D"]
editor/display_folded = true
visible = false

[node name="testbone" type="Polygon2D" parent="Node2D/Node2D"]
texture = ExtResource( 1 )
skeleton = NodePath("../Skeleton2D")
polygon = PoolVector2Array( 0, 0, 100, 0, 100, 100, 0, 100 )
uv = PoolVector2Array( 0, 0, 64, 0, 64, 64, 0, 64 )

[node name="Skeleton2D" type="Skeleton2D" parent="Node2D/Node2D"]

[node name="Bone2D" type="Bone2D" parent="Node2D/Node2D/Skeleton2D"]
position = Vector2( 50, 0 )
rotation = 1.5708
rest = Transform2D( -4.37114e-008, 1, -1, -4.37114e-008, 50, 0 )
default_length = 100.0

[node name="Polygon2D" type="Polygon2D" parent="Node2D"]
visible = false
position = Vector2( -8, 12 )
texture = ExtResource( 1 )
polygon = PoolVector2Array( 0, 0, 50, 0, 100, 0, 75, 100, 50, 100, 25, 100 )
uv = PoolVector2Array( 0, 0, 32, 0, 64, 0, 65, 64, 32, 64, 0, 64 )
script = ExtResource( 2 )

[node name="TubeEl" type="Polygon2D" parent="."]
material = SubResource( 4 )
texture = ExtResource( 3 )
polygon = PoolVector2Array( -21.6506, -12.5, 21.6506, 12.5, 14.7721, 32.6047, -14.7721, 27.3953 )
uv = PoolVector2Array( 0, 0, 580, 0, 580, 580, 0, 580 )
script = ExtResource( 4 )
startWidth = 50
startAngle = 30
end = Vector2( 0, 30 )
endWidth = 30
endAngle = 10
inputTexture = ExtResource( 3 )
